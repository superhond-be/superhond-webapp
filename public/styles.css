:root {
  --bg: #0b0f14;
  --fg: #e8eef6;
  --muted: #9bb0c3;
  --card: #131a22;
  --line: #203040;
  --pri: #4da3ff;
}
(function setupSearch() {
  const form = document.getElementById("searchForm");
  const input = document.getElementById("searchInput");
  const box = document.getElementById("searchResults");
  if (!form || !input || !box) return;

  function card(html) {
    const div = document.createElement("div");
    div.className = "card";
    div.innerHTML = html;
    return div;
  }

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const q = input.value.trim();
    if (!q) { box.innerHTML = `<p>Typ eerst een zoekterm.</p>`; return; }

    box.textContent = "Zoeken‚Ä¶";
    try {
      const res = await fetch(`/api/search?q=${encodeURIComponent(q)}`);
      const data = await res.json();
      const results = data?.results ?? [];

      box.innerHTML = "";
      if (!results.length) {
        box.innerHTML = `<p>Geen resultaten voor <strong>${q}</strong>.</p>`;
        return;
      }

      results.forEach(r => {
        if (r.type === "customer") {
          const dogs = r.dogs?.length
            ? `<ul>${r.dogs.map(d => `<li>${d.name} <small>(${d.breed})</small></li>`).join("")}</ul>`
            : `<em>Geen honden gekoppeld</em>`;
          box.appendChild(card(`
            <h3>üë§ Klant: ${r.title}</h3>
            <p class="muted">${r.subtitle || ""}</p>
            <div><strong>Honden:</strong> ${dogs}</div>
          `));
        } else {
          const stats = r.stats || {};
          const owner = r.owner
            ? `üë§ ${r.owner.name} <small>${r.owner.email || ""}</small>`
            : `<em>Geen eigenaar gevonden</em>`;
          const photo = r.photoUrl
            ? `<img class="dogphoto" src="${r.photoUrl}" alt="Foto van ${r.title}" />`
            : "";
          box.appendChild(card(`
            <h3>üê∂ Hond: ${r.title}</h3>
            <p class="muted">${r.subtitle || ""}</p>
            ${photo}
            <div>${owner}</div>
            <div class="grid">
              <div><strong>Passes:</strong> ${stats.passesCount ?? 0}</div>
              <div><strong>Strips:</strong> ${(stats.usedStrips ?? 0)} / ${(stats.totalStrips ?? 0)}</div>
              <div><strong>Toekomstige lessen:</strong> ${stats.futureLessons ?? 0}</div>
              <div><strong>Voorbije lessen:</strong> ${stats.pastLessons ?? 0}</div>
            </div>
          `));
        }
      });
    } catch (err) {
      console.error(err);
      box.innerHTML = `<p>Zoeken mislukt. Probeer later opnieuw.</p>`;
    }
  });
})();
/* Basis */
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  background: var(--bg);
  color: var(--fg);
  font: 15px/1.45 system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
}

.pick-item { display:flex; align-items:center; justify-content:space-between; gap:10px; padding:.6rem .7rem; border-bottom:1px solid var(--line,#223); }
.pick-item:last-child { border-bottom:0; }
.badge { display:inline-block; padding:.15rem .5rem; border-radius:999px; background:#1c4a6b; color:#d7efff; font-size:.8rem; margin-left:.4rem; }

/* Header & navigatie */
header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 16px;
  border-bottom: 1px solid var(--line);
  background: #0d141d;
  position: sticky;
  top: 0;
}
.brand {
  display: flex;
  gap: 8px;
  align-items: center;
  font-weight: 700;
}
.emoji {
  font-size: 20px;
}
.tabs {
  display: flex;
  gap: 8px;
}
.tab {
  background: #0f1620;
  color: var(--fg);
  border: 1px solid var(--line);
  padding: 8px 10px;
  border-radius: 8px;
  cursor: pointer;
}
.tab.is-active {
  border-color: var(--pri);
}

/* Layout */
main {
  max-width: 980px;
  margin: 18px auto;
  padding: 0 16px;
}
.panel {
  background: var(--card);
  border: 1px solid var(--line);
  border-radius: 12px;
  padding: 16px;
  margin: 12px 0;
}

/* Formulieren */
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 12px;
}
.row {
  display: flex;
  gap: 8px;
  align-items: center;
}
label {
  display: flex;
  flex-direction: column;
  gap: 6px;
  font-size: 13px;
}
input,
select {
  background: #0f1620;
  border: 1px solid var(--line);
  color: var(--fg);
  padding: 8px;
  border-radius: 8px;
}
input:focus,
select:focus {
  outline: none;
  border-color: var(--pri);
}

/* Buttons */
.btn {
  background: #122033;
  border: 1px solid var(--line);
  color: var(--fg);
  padding: 8px 10px;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.2s, border-color 0.2s;
}
.btn:hover {
  background: #162a40;
}
.btn.primary {
  border-color: var(--pri);
}
.btn.small {
  padding: 6px 8px;
  font-size: 12px;
}

/* Lijsten & kaarten */
.list {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
.card {
  background: #0f1620;
  border: 1px solid var(--line);
  border-radius: 12px;
  overflow: hidden;
}
.card-head {
  display: flex;
  justify-content: space-between;
  gap: 12px;
  padding: 12px 14px;
  border-bottom: 1px solid var(--line);
}
.actions {
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
}
.card-body {
  padding: 12px 14px;
}
.grid-two {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}
ul {
  margin: 8px 0 0 16px;
}
.bullets li {
  margin: 4px 0;
}
.passes li {
  margin: 8px 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

/* Tekst */
.muted {
  color: var(--muted);
}
h2 {
  margin-top: 0;
}
h4 {
  margin: 0 0 6px 0;
  font-size: 14px;
  color: var(--pri);
}

/* Tabbladen */
.tabpane {
  display: none;
}
.tabpane.is-visible {
  display: block;
}

/* Footer */
footer {
  padding: 16px;
  color: var(--muted);
  text-align: center;
  font-size: 13px;
}

.data-table th { cursor: pointer; user-select: none; }
.data-table th .sort {
  font-size: 12px; opacity: .7; margin-left: 6px;
}

/* Kleinere polish voor deze tab */
#section-people .grid { gap: 10px; }
#section-people table { width: 100%; border-collapse: collapse; }
#section-people th, #section-people td { padding: 8px; border-bottom: 1px solid #1f2937; }

.data-table th { cursor: pointer; user-select: none; }
.data-table th .sort {
  font-size: 12px; opacity: .7; margin-left: 6px;
  #passes-filters { gap: 12px; align-items: end; flex-wrap: wrap; }
#passes-filters label { display: flex; flex-direction: column; gap: 6px
}

  .table-scroll { overflow:auto; }
.table { width:100%; border-collapse:collapse; }
.table th, .table td { padding:.6rem .7rem; border-bottom:1px solid var(--line); }
.card { background:var(--card,#10151c); border:1px solid var(--line); border-radius:10px; padding:1rem; margin:1rem 0; }
.grid-2 { display:grid; grid-template-columns:repeat(2,minmax(0,1fr)); gap:12px; }
.form-row { display:flex; flex-direction:column; gap:6px; }
.form-row.inline { flex-direction:row; align-items:center; gap:10px; }
.toolbar { display:flex; align-items:flex-end; gap:12px; justify-content:space-between; margin-bottom:.5rem; }
.btn { padding:.55rem .9rem; border:1px solid var(--line); border-radius:8px; background:#182230; cursor:pointer; }
.btn.primary { background:#0d6efd; border-color:#0d6efd; color:#fff; }
.muted { opacity:.7; }
.dogs-thumb { width:48px; height:48px; object-fit:cover; border-radius:6px; border:1px solid var(--line); }
@media (max-width: 900px){ .grid-2 { grid-template-columns:1fr; } }

  .pick-item { display:flex; align-items:center; justify-content:space-between; gap:10px; padding:.6rem .7rem; border-bottom:1px solid var(--line,#223); }
.pick-item:last-child { border-bottom:0; }
.badge { display:inline-block; padding:.15rem .5rem; border-radius:999px; background:#1c4a6b; color:#d7efff; font-size:.8rem; margin-left:.4rem; }
.btn.secondary { background:#2a3342; border:1px solid var(--line,#334); color:#e9f1f7; }
.bullets { padding-left: 18px; margin: 0; }

  
