
function getSort(){ return JSON.parse(localStorage.getItem('sh_sort')||'{}'); }
function setSort(s){ localStorage.setItem('sh_sort', JSON.stringify(s)); }
const byId=(list,id)=>list.find(x=>x.id===id)||{};
const nameFrom=(list,id)=> (byId(list,id).naam||byId(list,id).type||'');
const locObj=(db,id)=>byId(db.locaties,id);
function renderBeheer(){ const db=SHDB.loadDB(); const fName=document.getElementById('fName').value.toLowerCase(); const fLoc=document.getElementById('fLoc').value.toLowerCase(); const fTrainer=document.getElementById('fTrainer').value.toLowerCase(); const fStart=document.getElementById('fStart').value; const fEnd=document.getElementById('fEnd').value; let rows=[...db.lessen]; rows=rows.filter(ls=>{ const naam=nameFrom(db.namen,ls.naamId).toLowerCase(); const plaats=(locObj(db,ls.locatieId).plaats||'').toLowerCase(); const trainers=(ls.trainerIds||[]).map(id=>nameFrom(db.trainers,id)).join(', ').toLowerCase(); if(fName && !naam.includes(fName)) return false; if(fLoc && !plaats.includes(fLoc)) return false; if(fTrainer && !trainers.includes(fTrainer)) return false; if(fStart && (ls.datum||'')<fStart) return false; if(fEnd && (ls.datum||'')>fEnd) return false; return true; }); const s=getSort(); if(s.key){ const key=s.key, dir=s.dir==='desc'?-1:1; rows.sort((a,b)=>{ const val=(ls)=> key==='naam'?nameFrom(db.namen,ls.naamId): key==='trainer'?(ls.trainerIds||[]).map(id=>nameFrom(db.trainers,id)).join(', '): key==='datum'?ls.datum||'': key==='plaats'?(locObj(db,ls.locatieId).plaats||''):''; const A=val(a),B=val(b); return A===B?0:(A>B?1:-1)*dir; }); } const tbody=document.getElementById('tbl-lessen'); tbody.innerHTML=rows.map(ls=>{ const loc=locObj(db,ls.locatieId); const maps='https://www.google.com/maps/search/?api=1&query='+encodeURIComponent((loc.adres||'')+', '+(loc.plaats||'')+', '+(loc.land||'')); return `<tr data-id="${ls.id}"><td><input name="naamId" value="${ls.naamId}"></td><td><input name="typeId" value="${ls.typeId}"></td><td><input name="locatieId" value="${ls.locatieId}"></td><td>${loc.adres||''}</td><td>${loc.plaats||''}</td><td>${loc.land||''}</td><td><input name="themaId" value="${ls.themaId}"></td><td><input name="trainers" value="${(ls.trainerIds||[]).join(',')}"></td><td><input name="datum" type="date" value="${ls.datum||''}"></td><td><input name="tijd" type="time" value="${ls.tijd||''}"></td><td>${ls.eindtijd||''}</td><td><input name="capaciteit" type="number" value="${ls.capaciteit||''}"></td><td><a href="${maps}" target="_blank">Maps</a></td><td class="actions-cell"><div class="actions"><button class="iconbtn" data-act="save" data-id="${ls.id}">💾</button><button class="iconbtn" data-act="del" data-id="${ls.id}">🗑️</button></div></td></tr>`; }).join(''); document.querySelectorAll('th.sortable .badge').forEach(b=>b.textContent=''); const s2=getSort(); if(s2.key){ const el=document.querySelector(`th.sortable[data-key="${s2.key}"] .badge`); if(el) el.textContent=s2.dir==='asc'?'▲':'▼'; } }
function setupBeheer(){ const form=document.getElementById('form-add'); form.addEventListener('submit',e=>{ e.preventDefault(); const db=SHDB.loadDB(); const data=new FormData(form); const naamId=data.get('naam'); const typeId=data.get('type'); const locId=data.get('loc'); const themaId=data.get('thema'); const trainerIds=data.getAll('trainer'); const datum=data.get('datum'); const tijd=data.get('tijd'); const cap=parseInt(data.get('cap'))||0; const duur=(byId(db.namen,naamId).lesduur)||60; const eind=SHDB.addMinutesToTime(tijd,duur); db.lessen.push({id:SHDB.uid('ls'),naamId,typeId,locatieId:locId,themaId,trainerIds,datum,tijd,eindtijd:eind,capaciteit:cap}); SHDB.saveDB(db); form.reset(); renderBeheer(); }); document.body.addEventListener('click',(e)=>{ const btn=e.target.closest('button.iconbtn'); if(!btn) return; const act=btn.dataset.act; const id=btn.dataset.id; const db=SHDB.loadDB(); const i=db.lessen.findIndex(l=>l.id===id); if(i<0) return; if(act==='del'){ if(confirm('Les verwijderen?')){ db.lessen.splice(i,1); SHDB.saveDB(db); renderBeheer(); } return; } if(act==='save'){ const tr=btn.closest('tr'); const ls=db.lessen[i]; tr.querySelectorAll('input').forEach(inp=>{ if(inp.name==='trainers'){ ls.trainerIds=inp.value.split(',').map(s=>s.trim()).filter(Boolean);} else { ls[inp.name]=inp.value; } }); const duur=(byId(db.namen,ls.naamId).lesduur)||60; ls.eindtijd=SHDB.addMinutesToTime(ls.tijd,duur); SHDB.saveDB(db); renderBeheer(); } }); document.querySelectorAll('.filterbar input,.filterbar select').forEach(el=>el.addEventListener('input',renderBeheer)); document.querySelectorAll('th.sortable').forEach(th=> th.addEventListener('click',()=>{ const s=getSort(); let dir='asc'; if(s.key===th.dataset.key && s.dir==='asc') dir='desc'; setSort({key:th.dataset.key,dir}); renderBeheer(); })); } window.addEventListener('DOMContentLoaded',()=>{ renderBeheer(); setupBeheer(); });